// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @constructor
 */
export class StageBeaconMessage {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns StageBeaconMessage
 */
__init(i:number, bb:flatbuffers.ByteBuffer):StageBeaconMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param StageBeaconMessage= obj
 * @returns StageBeaconMessage
 */
static getRootAsStageBeaconMessage(bb:flatbuffers.ByteBuffer, obj?:StageBeaconMessage):StageBeaconMessage {
  return (obj || new StageBeaconMessage).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns number
 */
port():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startStageBeaconMessage(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset nameOffset
 */
static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number port
 */
static addPort(builder:flatbuffers.Builder, port:number) {
  builder.addFieldInt32(1, port, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endStageBeaconMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishStageBeaconMessageBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
};

static createStageBeaconMessage(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset, port:number):flatbuffers.Offset {
  StageBeaconMessage.startStageBeaconMessage(builder);
  StageBeaconMessage.addName(builder, nameOffset);
  StageBeaconMessage.addPort(builder, port);
  return StageBeaconMessage.endStageBeaconMessage(builder);
}
}
